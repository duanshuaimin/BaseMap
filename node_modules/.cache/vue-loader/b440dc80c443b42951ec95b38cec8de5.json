{"remainingRequest":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liangma/Desktop/workspace/BaseMap/src/components/history/editor-history.vue.html?vue&type=template&id=25c6499f&scoped=true&lang=html&","dependencies":[{"path":"/Users/liangma/Desktop/workspace/BaseMap/src/components/history/editor-history.vue.html","mtime":1591500374363},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}