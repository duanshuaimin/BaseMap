{"remainingRequest":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liangma/Desktop/workspace/BaseMap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangma/Desktop/workspace/BaseMap/src/components/editor-canvas.vue?vue&type=template&id=3459e1d8&scoped=true&","dependencies":[{"path":"/Users/liangma/Desktop/workspace/BaseMap/src/components/editor-canvas.vue","mtime":1589124374954},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangma/Desktop/workspace/BaseMap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7CiAgICAgIGNsYXNzOiB7IGNvbnRlbnQ6IF92bS5jb25maWdzLmJnQWxsQm9vbCB9LAogICAgICBzdHlsZTogewogICAgICAgIHdpZHRoOiBfdm0uY29uZmlncy5iZ0FsbEJvb2wgPyBfdm0uY29uZmlncy53aW5kb3dfdyArICJweCIgOiAiYXV0byIsCiAgICAgICAgaGVpZ2h0OiBfdm0uY29uZmlncy5iZ0FsbEJvb2wgPyBfdm0uY29uZmlncy53aW5kb3dfaCArICJweCIgOiAiYXV0byIsCiAgICAgICAgbGVmdDogX3ZtLmNvbmZpZ3MuYmdBbGxCb29sICYmIDAKICAgICAgfSwKICAgICAgYXR0cnM6IHsgaWQ6ICJjb250ZW50IiB9CiAgICB9LAogICAgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7CiAgICAgICAgICBjbGFzczogeyBncmlkOiBfdm0uY29uZmlncy5iZyA9PT0gImdyaWQiIH0sCiAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICB0cmFuc2Zvcm06CiAgICAgICAgICAgICAgInNjYWxlKCIgKwogICAgICAgICAgICAgIF92bS5jb25maWdzLnNjYWxlICsKICAgICAgICAgICAgICAiKSAgdHJhbnNsYXRlKCIgKwogICAgICAgICAgICAgIC0oMSAtIF92bS5jb25maWdzLnNjYWxlKSAqIDk1MCArCiAgICAgICAgICAgICAgInB4LCIgKwogICAgICAgICAgICAgIC0oMSAtIF92bS5jb25maWdzLnNjYWxlKSAqIDQwMCArCiAgICAgICAgICAgICAgInB4KSIsCiAgICAgICAgICAgIGJhY2tncm91bmQ6ICJ1cmwoIiArIF92bS5jb25maWdzLmJhY2tncm91bmRVcmwgKyAiKSIKICAgICAgICAgIH0sCiAgICAgICAgICBhdHRyczogeyBpZDogImNhbnZhcyIgfQogICAgICAgIH0sCiAgICAgICAgX3ZtLl9sKF92bS5lZHJhd0NvbXBzLCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGtleTogaW5kZXgsCiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb21wLWl0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICBhY3RpdmU6IGl0ZW0uaXNBY3RpdmUsCiAgICAgICAgICAgICAgICByb29tQWN0aXZlOiBpdGVtLnR5cGUgPT09ICJyb29tIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiBpdGVtLnN0eWxlLndpZHRoICsgInB4IiwKICAgICAgICAgICAgICAgIGhlaWdodDogaXRlbS5zdHlsZS5oZWlnaHQgKyAicHgiLAogICAgICAgICAgICAgICAgdG9wOiBpdGVtLnN0eWxlLnRvcCAtIF92bS5yZWN0LnkgKyAicHgiLAogICAgICAgICAgICAgICAgbGVmdDogaXRlbS5zdHlsZS5sZWZ0IC0gX3ZtLnJlY3QueCArICJweCIsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogaXRlbS5zdHlsZS5wb3NpdGlvbiwKICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiBpdGVtLnN0eWxlLmJvcmRlcldpZHRoICsgInB4IiwKICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogInJvdGF0ZSgiICsgaXRlbS5zdHlsZS5yb3RhdGUgKyAiZGVnKSIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGF0dHJzOiB7IGRyYWdnYWJsZTogIV92bS5jb25maWdzLmJnQWxsQm9vbCAmJiBpdGVtLmlzQWN0aXZlIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zZWxlY3RJdGVtKCRldmVudCwgaW5kZXgpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZHJhZ3N0YXJ0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgIV92bS5jb25maWdzLmJnQWxsQm9vbCAmJgogICAgICAgICAgICAgICAgICAgIGl0ZW0uc3R5bGUuaXNGaXhlZCA9PT0gImZhbHNlIiAmJgogICAgICAgICAgICAgICAgICAgIF92bS5kcmFnQ29tcCgkZXZlbnQsIGl0ZW0sICJzdGFydCIsIGluZGV4KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGRyYWc6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAhX3ZtLmNvbmZpZ3MuYmdBbGxCb29sICYmCiAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS5pc0ZpeGVkID09PSAiZmFsc2UiICYmCiAgICAgICAgICAgICAgICAgICAgX3ZtLmRyYWdDb21wKCRldmVudCwgaXRlbSwgImRyYWciLCBpbmRleCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBkcmFnZW5kOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgIV92bS5jb25maWdzLmJnQWxsQm9vbCAmJgogICAgICAgICAgICAgICAgICAgIGl0ZW0uc3R5bGUuaXNGaXhlZCA9PT0gImZhbHNlIiAmJgogICAgICAgICAgICAgICAgICAgIF92bS5kcmFnQ29tcCgkZXZlbnQsIGl0ZW0sICJlbmQiLCBpbmRleCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBpdGVtLnR5cGUgPT09ICJpbWciCiAgICAgICAgICAgICAgICA/IF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb21wLWVsZW1lbnQgY29tcC1pbWcgaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogaXRlbS5pc0FjdGl2ZSwKICAgICAgICAgICAgICAgICAgICAgIGlzU2hhZG93OiBpdGVtLnN0eWxlLmlzQXBwbHlTaGFkb3cgPT09ICJ0cnVlIiwKICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlQWN0aXZlOiBpdGVtLm11bHRpcGxlQWN0aXZlQm9vbAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBpdGVtLnN0eWxlLndpZHRoICsgInB4IiwKICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogaXRlbS5zdHlsZS5oZWlnaHQgKyAicHgiLAogICAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiBpdGVtLnN0eWxlLmJvcmRlclJhZGl1cyArICIlIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBpdGVtLmljb24sIHRpdGxlOiBpdGVtLm5hbWUsIGFsdDogaXRlbS5uYW1lIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgaXRlbS50eXBlID09PSAibGluZV9jb2x1IgogICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29tcC1lbGVtZW50IGxpbmUgY29tcC1saW5lX2NvbHUiLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IGl0ZW0uaXNBY3RpdmUsCiAgICAgICAgICAgICAgICAgICAgICBpc1NoYWRvdzogaXRlbS5zdHlsZS5pc0FwcGx5U2hhZG93ID09PSAidHJ1ZSIsCiAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZUFjdGl2ZTogaXRlbS5tdWx0aXBsZUFjdGl2ZUJvb2wKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGl0ZW0uc3R5bGUuaGVpZ2h0ICsgInB4IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgaXRlbS50eXBlID09PSAibGluZV9yb3ciCiAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb21wLWVsZW1lbnQgbGluZSBjb21wLWxpbmVfcm93IiwKICAgICAgICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBpdGVtLmlzQWN0aXZlLAogICAgICAgICAgICAgICAgICAgICAgaXNTaGFkb3c6IGl0ZW0uc3R5bGUuaXNBcHBseVNoYWRvdyA9PT0gInRydWUiLAogICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGVBY3RpdmU6IGl0ZW0ubXVsdGlwbGVBY3RpdmVCb29sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgd2l0aDogaXRlbS5zdHlsZS53aWR0aCArICJweCIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIGl0ZW0udHlwZSA9PT0gInBpbGxhciIKICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICJjb21wLWVsZW1lbnQgbGluZSBjb21wLXBpbGxhciBjb21wLXBpbGxhci1zaGFkb3cgIiwKICAgICAgICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBpdGVtLmlzQWN0aXZlLAogICAgICAgICAgICAgICAgICAgICAgaXNTaGFkb3c6IGl0ZW0uc3R5bGUuaXNBcHBseVNoYWRvdyA9PT0gInRydWUiLAogICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGVBY3RpdmU6IGl0ZW0ubXVsdGlwbGVBY3RpdmVCb29sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBpdGVtLnN0eWxlLmhlaWdodCArICJweCIsCiAgICAgICAgICAgICAgICAgICAgICB3aXRoOiBpdGVtLnN0eWxlLndpZHRoICsgInB4IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgaXRlbS50eXBlID09PSAicm9vbSIKICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb21wLWVsZW1lbnQgbGluZSBjb21wLXJvb20iLAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBpdGVtLmlzQWN0aXZlLAogICAgICAgICAgICAgICAgICAgICAgICBpc1NoYWRvdzogaXRlbS5zdHlsZS5pc0FwcGx5U2hhZG93ID09PSAidHJ1ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlQWN0aXZlOiBpdGVtLm11bHRpcGxlQWN0aXZlQm9vbAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBpdGVtLnN0eWxlLndpZHRoICsgInB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBpdGVtLnN0eWxlLmhlaWdodCArICJweCIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbXAtcm9vbS1pbnNldCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGl0ZW0uc3R5bGUud2lkdGggKyAicHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogaXRlbS5zdHlsZS5oZWlnaHQgKyAicHgiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIGl0ZW0udHlwZSA9PT0gImRldmljZSIKICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbXAtZWxlbWVudCBkZXZpY2UgY29tcC1kZXZpY2UiLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IGl0ZW0uaXNBY3RpdmUsCiAgICAgICAgICAgICAgICAgICAgICBpc1NoYWRvdzogaXRlbS5zdHlsZS5pc0FwcGx5U2hhZG93ID09PSAidHJ1ZSIsCiAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZUFjdGl2ZTogaXRlbS5tdWx0aXBsZUFjdGl2ZUJvb2wKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogaXRlbS5zdHlsZS53aWR0aCArICJweCIsCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGl0ZW0uc3R5bGUuaGVpZ2h0ICsgInB4IiwKICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGl0ZW0uc3R5bGUuYmFja2dyb3VuZAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgIV92bS5jb25maWdzLmJnQWxsQm9vbCAmJgogICAgICAgICAgICAgIGl0ZW0uaXNBY3RpdmUgJiYKICAgICAgICAgICAgICBbInBpbGxhciJdLmluZGV4T2YoaXRlbS50eXBlKSA9PT0gLTEKICAgICAgICAgICAgICAgID8gX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYXNzaXN0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgWyJsaW5lX2NvbHUiXS5pbmRleE9mKGl0ZW0udHlwZSkgPT09IC0xCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWRSIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS53aWR0aCAtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnN0eWxlLmJvcmRlcldpZHRoICogMiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IGl0ZW0uc3R5bGUuaGVpZ2h0IC8gMiAtIDYgKyAicHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBkcmFnZ2FibGU6ICJ0cnVlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnc3RhcnQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZXNpemVCeURyYWdDb21wKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzdGFydCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVzaXplQnlEcmFnQ29tcCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZHJhZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnZW5kOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVzaXplQnlEcmFnQ29tcCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgWyJsaW5lX2NvbHUiXS5pbmRleE9mKGl0ZW0udHlwZSkgPT09IC0xCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWRMIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTYgKyAicHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBpdGVtLnN0eWxlLmhlaWdodCAvIDIgLSA2ICsgInB4IgogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZHJhZ2dhYmxlOiAidHJ1ZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZ3N0YXJ0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVzaXplQnlEcmFnQ29tcCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic3RhcnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZzogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlc2l6ZUJ5RHJhZ0NvbXAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRyYWciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZ2VuZDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlc2l6ZUJ5RHJhZ0NvbXAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImVuZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgIFsibGluZV9yb3ciXS5pbmRleE9mKGl0ZW0udHlwZSkgPT09IC0xCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWRUIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogaXRlbS5zdHlsZS53aWR0aCAvIDIgLSA2ICsgInB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogLTYgKyAicHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBkcmFnZ2FibGU6ICJ0cnVlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnc3RhcnQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZXNpemVCeURyYWdDb21wKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzdGFydCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVzaXplQnlEcmFnQ29tcCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZHJhZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFnZW5kOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVzaXplQnlEcmFnQ29tcCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgWyJsaW5lX3JvdyJdLmluZGV4T2YoaXRlbS50eXBlKSA9PT0gLTEKICAgICAgICAgICAgICAgICAgICAgID8gX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJhZEIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBpdGVtLnN0eWxlLndpZHRoIC8gMiAtIDYgKyAicHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnN0eWxlLmhlaWdodCAtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnN0eWxlLmJvcmRlcldpZHRoICogMiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJweCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGRyYWdnYWJsZTogInRydWUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdzdGFydDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlc2l6ZUJ5RHJhZ0NvbXAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0YXJ0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWc6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZXNpemVCeURyYWdDb21wKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkcmFnIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdlbmQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZXNpemVCeURyYWdDb21wKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJlbmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0cmFucyIsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogaXRlbS5zdHlsZS53aWR0aCArIDI1ICsgInB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IGl0ZW0uc3R5bGUuaGVpZ2h0IC8gMiAtIDExICsgInB4IgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBkcmFnZ2FibGU6ICJ0cnVlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdzdGFydDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udHJhbnMoJGV2ZW50LCBpdGVtLCAic3RhcnQiLCBpbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWc6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRyYW5zKCRldmVudCwgaXRlbSwgImRyYWciLCBpbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdlbmQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRyYW5zKCRldmVudCwgaXRlbSwgImVuZCIsIGluZGV4KQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuLy4uL2Fzc2V0cy9pY29uL3RyYW5zbGF0ZS5zdmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgfSksCiAgICAgICAgMAogICAgICApLAogICAgICAhX3ZtLmNvbmZpZ3MuYmdBbGxCb29sCiAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNsaWRlIiB9LCBbCiAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAiIiB9IH0sIFtfdm0uX3YoIue8qeaUviIpXSksCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5jb25maWdzLnNjYWxlLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiY29uZmlncy5zY2FsZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2xpZGVyIiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgdHlwZTogInJhbmdlIiwKICAgICAgICAgICAgICAgIGlkOiAidm9sIiwKICAgICAgICAgICAgICAgIHN0ZXA6ICIwLjAxIiwKICAgICAgICAgICAgICAgIG5hbWU6ICJ2b2wiLAogICAgICAgICAgICAgICAgbWluOiAiMC43IiwKICAgICAgICAgICAgICAgIG1heDogIjEuMCIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uY29uZmlncy5zY2FsZSB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBfX3I6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRzZXQoX3ZtLmNvbmZpZ3MsICJzY2FsZSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgXSkKICAgICAgICA6IF92bS5fZSgpLAogICAgICBfdm0uY29uZmlncy5iZ0FsbEJvb2wKICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2NyZWVuIiB9LCBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi8uLi9hc3NldHMvaWNvbi9zY3JlZW5fY2FuY2VsLnN2ZyIpLAogICAgICAgICAgICAgICAgYWx0OiAi5Y+z5a+56b2QIiwKICAgICAgICAgICAgICAgIHRpdGxlOiAi5Y+z5a+56b2QIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zY3JlZW4gfQogICAgICAgICAgICB9KQogICAgICAgICAgXSkKICAgICAgICA6IF92bS5fZSgpCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}